CREATE TABLE "films" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "description" varchar(200),
  "release_date" date NOT NULL,
  "duration" bigint,
  "mpa_rating" bigint
);

CREATE TABLE "film_genre" (
  "film_id" bigint,
  "genre_id" bigint
);

CREATE TABLE "genres" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar
);

CREATE TABLE "mpa_rating" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL
);

CREATE TABLE "likes_rating" (
  "film_id" integer,
  "user_id" integer
);

CREATE TABLE "users" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "login" varchar UNIQUE NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "name" varchar,
  "birthday" date NOT NULL
);

CREATE TABLE "friends" (
  "user_id" bigint,
  "friend_id" bigint,
  "status" varchar DEFAULT 'REQUESTED'
);

CREATE UNIQUE INDEX ON "films" ("name", "release_date");

CREATE UNIQUE INDEX ON "film_genre" ("film_id", "genre_id");

CREATE UNIQUE INDEX ON "likes_rating" ("film_id", "user_id");

CREATE UNIQUE INDEX ON "friends" ("user_id", "friend_id");

COMMENT ON TABLE "films" IS 'Stores film data';

COMMENT ON TABLE "film_genre" IS 'Stores genres for film ';

COMMENT ON TABLE "genres" IS 'Stores genre';

COMMENT ON TABLE "mpa_rating" IS 'Stores MPA rating for films';

COMMENT ON TABLE "likes_rating" IS 'Stores film likes';

COMMENT ON TABLE "users" IS 'Stores user data';

COMMENT ON TABLE "friends" IS 'Stores friendship links for users';

ALTER TABLE "films" ADD FOREIGN KEY ("mpa_rating") REFERENCES "mpa_rating" ("id");

ALTER TABLE "film_genre" ADD FOREIGN KEY ("film_id") REFERENCES "films" ("id");

ALTER TABLE "film_genre" ADD FOREIGN KEY ("genre_id") REFERENCES "genres" ("id");

ALTER TABLE "likes_rating" ADD FOREIGN KEY ("film_id") REFERENCES "films" ("id");

ALTER TABLE "likes_rating" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "friends" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "friends" ADD FOREIGN KEY ("friend_id") REFERENCES "users" ("id");
